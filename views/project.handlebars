<header>
  <div class="container">
  <div class="row align-items-center">
    <div class="col-4">
      <img width="100px" src="/images/PM_Icon.jpg"/>
    </div>
    <div class="col-4">
      <h3 style="text-align: center;"> Agility PM </h3>
    </div>
    <div class="col-4 usertitle">
      <a href="/home">Hi <span id="username">{{user.name}}</span></a>
    </div>
  </div>
  </div>
</header>
<header class="subheader">
  <div class="container">
  <div class="row align-items-center">
    <div class="col-3">
    </div>
    <div class="col-6" style="text-align: center;">
      <a style="color: white" href="/home">Home |</a>
      <a style="color: white" href="/newprojects">New Projects |</a>
      <a style="color: white" href="/search">Search | </a>
      <a style="color: white" href="/logout">Logout</a>
    </div>
    </div>
  </div>
</header/>

<div class="container">
<div class="login-padding">
  <div class="container">
      <div>
        <div class="row card align-items-center">
          <h3>{{project.title}}</h3>
          <div class="container" id=""></div>
        </div>
      </div>
  </div>
</div>

<div class="card-padding">
  <div class="container">
      <div>
        <div class="row card align-items-center">
          <h3>Tasks</h3>
          <div class="container" id="deadlines">
            {{#each deadlines}}
              <div class="subcard" data="deadline" id="{{this._id}}">
                <div class="row">
                  <div class="col-8">
                    <h5>{{this.title}} - ({{this.status}})</h5>
                    <p>{{this.datetime}}</p>
                  </div>
                  <div class="col-4">
                    <span id="{{this._id}}" class="close">&times;</span>
                  </div>
                  <div class="col-12 center">
                    <span id="{{this._id}}" class="taskState">To Do</span>
                    <span id="{{this._id}}" class="taskState">In Progress</span>
                    <span id="{{this._id}}" class="taskState">Done</span>
                  </div>
                </div>
              </div>
            {{/each}}
            <div class="add-box" id="newdeadline">
              Add New Task
            </div>
          </div>
        </div>
      </div>
  </div>
</div>

<div class="card-padding">
  <div class="container">
      <div>
        <div class="row card align-items-center">
          <h3>Resources</h3>
          <div class="container" id="deadlines">
            {{#each resources}}
              <div class="subcard" data="resource" id="{{this._id}}">
                <div class="row">
                  <div class="col-8">
                  <h6>{{this.name}}</h6>
                  <p>{{this.desc}}</p>
                </div>
                <div class="col-4">
                  <span id="{{this._id}}" class="close">&times;</span>
                </div>
                <div class="col-12">
                <div>From: {{this.fromDate}}</div>
                <div>To: {{this.toDate}}</div>
                </div>
                </div>
              </div>
            {{/each}}
            <div class="add-box" id="newresource">
              Add New Resource
            </div>
          </div>
        </div>
      </div>
  </div>
</div>

<div class="card-padding bottom-padding">
  <div class="container">
      <div>
        <div class="row card align-items-center">
          <h3>Users</h3>
          <div class="col-12" id="deadlines">
            {{#each users}}
              <div class="subcard">
                <div class="row">
                  <div class="col-9">
                  <h6>{{this.name}}</h6>
                  <p>{{this.username}}</p>
                </div>
                <div class ="col-3">
                  <img width="50px" src="https://stroops.com/wp-content/uploads/2016/11/placeholder-profile-male-500x500.png"/>
                  <span id="{{this._id}}" class="remove">&times;</span>
                </div>
                </div>
              </div>
            {{/each}}
            <div class="add-box" id="newuser">
              Add New User
            </div>
          </div>
        </div>
      </div>
  </div>
</div>

<footer>
  <div>
    <div>
      <a/>
    </div>
    <div>
      <div>
        <div/>
      </div>
    </div>
    <div >
      <a>By Calum Bell</a>
    </div>
  </div>
</footer>

<div id="deadlineModal" class="modal">

  <!-- Modal content -->
  <div class="modal-content">
    <span id="deadlineClose" class="modal-exit">&times;</span>
    <div class="row align-items-center centre">
      <div class="container">
        <h3> New Task </h3>
            <div class="row centre">
              <div class="col-12" style="padding-right: 3px;">
                <label>Title: </label>
                <input type="text" id="deadlinetitle" placeholder="Sample" name="uname" required>
              </div>
              <div class="col-12">
                <label>Deadline: </label>
                <input type="date" id="deadlinedate" placeholder="" name="desc" required>
              </div>
              <div class="col-12">
                <button type="button" id="createDeadline" class="button-green">Create</button>
              </div>
            </div>
            <div class="error">
              <h7 id="taskErrorCode"></h7>
              <i><h8 id="taskErrorMessage"></h8></i>
            </div>
      </div>
    </div>
  </div>

</div>

<div id="resourceModal" class="modal">

  <!-- Modal content -->
  <div class="modal-content">
    <span id="resourceClose" class="modal-exit">&times;</span>
    <div class="row align-items-center centre">
      <div class="container">
        <h3> New Resource </h3>
            <div class="row centre">
              <div class="col-12" style="padding-right: 3px;">
                <label>Title: </label>
                <input type="text" id="resourcetitle" placeholder="Sample" name="uname" required>
              </div>
              <div class="col-12">
                <label>Desc: </label>
                <input type="text" id="resourcedesc" placeholder="" name="desc" required>
              </div>
              <div class="col-12">
                <label>Start Date: </label>
                <input type="date" id="resourcefromdate" placeholder="" name="desc" required>
              </div>
              <div class="col-12">
                <label>End Date: </label>
                <input type="date" id="resourcetodate" placeholder="" name="desc" required>
              </div>
              <div class="col-12">
                <button type="button" id="createResource" class="button-green">Create</button>
              </div>
              <div class="col-12">
                <div class="error">
                  <h7 id="resourceErrorCode"></h7>
                  <i><h8 id="resourceErrorMessage"></h8></i>
                </div>
              </div>
            </div>
      </div>
    </div>
  </div>

</div>

<div id="userModal" class="modal">

  <!-- Modal content -->
  <div class="modal-content">
    <span id="userClose" class="modal-exit">&times;</span>
    <h3 class="center">New User</h3>
    <div class="error">
      <h7 id="userErrorCode"></h7>
      <i><h8 id="userErrorMessage"></h8></i>
    </div>
    {{#each allUsers}}
      <div class="subcard">
        <div class="row">
          <div class="col-9">
          <h6>{{this.name}}</h6>
          <p>{{this.username}}</p>
        </div>
        <div class="col-3">
          <img width="50px" src="https://stroops.com/wp-content/uploads/2016/11/placeholder-profile-male-500x500.png"/>
          <span id="{{this._id}}" class="add">&#43;</span>
        </div>
        <div class="col-12">
        </div>
        </div>
      </div>
    {{/each}}
  </div>

</div>
</div>

<script>
$(document).ready(function() {

var deadlineModal = document.getElementById('deadlineModal');
var deadlineBtn = document.getElementById("newdeadline");
var deadlineSpan = document.getElementById("deadlineClose");

var resourceModal = document.getElementById('resourceModal');
var resourceBtn = document.getElementById("newresource");
var resourceSpan = document.getElementById("resourceClose");

var userModal = document.getElementById('userModal');
var userBtn = document.getElementById("newuser");
var userSpan = document.getElementById("userClose");

var url = window.location.href;
var id = url.substring(url.lastIndexOf('/') + 1);

// When the user clicks on the button, open the modal
userBtn.onclick = function() {
    userModal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
userSpan.onclick = function() {
    userModal.style.display = "none";
}
// When the user clicks on the button, open the modal
deadlineBtn.onclick = function() {
    deadlineModal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
deadlineSpan.onclick = function() {
    deadlineModal.style.display = "none";
}

resourceBtn.onclick = function() {
    resourceModal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
resourceSpan.onclick = function() {
    resourceModal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == resourceModal || event.target == deadlineModal || event.target == userModal) {
        deadlineModal.style.display = "none";
        resourceModal.style.display = "none";
        userModal.style.display = "none";
    }
}

/*                Event Listeners           */

// Create a new Deadline as part of this project -
  $("#createDeadline").click(function(e) {
    console.log($("#deadlinedate").val());
    console.log($("#deadlinetitle").val());
      e.preventDefault();
      $.ajax({
        type: "POST",
        url: "/deadlines/create",
        data: {
          title: $("#deadlinetitle").val(),
          datetime: $("#deadlinedate").val(),
          project: id,
        },
        success: function(result) {
          //window.location.reload();
          console.log(JSON.stringify(result));
          document.getElementById("taskErrorCode").innerHTML = "";
          document.getElementById("taskErrorMessage").innerHTML = "";
          window.location.reload();
        },
        error: function(result) {
          console.log(result);
          if(result.responseJSON != null) {
            document.getElementById("taskErrorCode").innerHTML = result.responseJSON.errorCode;
            document.getElementById("taskErrorMessage").innerHTML = result.responseJSON.errorMessage;
          }
        }
      });
    });

    // Create a new Resource as part of this project -
    $("#createResource").click(function(e) {
        e.preventDefault();
        $.ajax({
          type: "POST",
          url: "/resources/create",
          data: {
            name: $("#resourcetitle").val(),
            desc: $("#resourcedesc").val(),
            fromDate: $("#resourcefromdate").val(),
            toDate: $("#resourcetodate").val(),
            project: id,
          },
          success: function(result) {
            window.location.reload();
            console.log(JSON.stringify(result));
          },
          error: function(result) {
            console.log(result);
            if(result.responseJSON != null) {
              document.getElementById("resourceErrorCode").innerHTML = result.responseJSON.errorCode;
              document.getElementById("resourceErrorMessage").innerHTML = result.responseJSON.errorMessage;
            }
          }
        });
      });

// https://www.w3schools.com/js/tryit.asp?filename=tryjs_confirm
      $(".close").click(function(e) {
          e.preventDefault();
          console.log(e);
          console.log(e.currentTarget.id);
          if (confirm(`Are you sure you want to delete this item?`)) {
                $.ajax({
                  type: "DELETE",
                  url: "/delete",
                  data: {
                    id: e.currentTarget.id
                  },
                  success: function(result) {
                    //alert(JSON.stringify(result));
                    window.location.reload();
                  },
                  error: function(result) {
                    //alert('Oops! There was a problem!');
                  }
                });
          }
     });

     // https://www.w3schools.com/js/tryit.asp?filename=tryjs_confirm
           $(".add").click(function(e) {
               e.preventDefault();
               console.log(e);
               console.log(e.currentTarget.id);
               if (confirm(`Are you sure you want to add this user?`)) {
                     $.ajax({
                       type: "POST",
                       url: "/projects/addUser",
                       data: {
                         userId: e.currentTarget.id,
                         projectId: id
                       },
                       success: function(result) {
                         console.log(result);
                         document.getElementById("userErrorCode").innerHTML = "";
                         document.getElementById("userErrorMessage").innerHTML = "";
                         window.location.reload();
                       },
                       error: function(result) {
                         console.log(result);
                         if(result.responseJSON != null) {
                           document.getElementById("userErrorCode").innerHTML = result.responseJSON.errorCode;
                           document.getElementById("userErrorMessage").innerHTML = result.responseJSON.errorMessage;
                         }
                       }
                     });
               }
          });

          $(".remove").click(function(e) {
              e.preventDefault();
              console.log(e);
              console.log(e.currentTarget.id);
              if (confirm(`Are you sure you want to remove this user?`)) {
                    $.ajax({
                      type: "POST",
                      url: "/projects/removeUser",
                      data: {
                        userId: e.currentTarget.id,
                        projectId: id
                      },
                      success: function(result) {
                        alert(JSON.stringify(result));
                      },
                      error: function(result) {
                        alert(result.responseJSON.errorMessage);
                      }
                    });
              }
         });

         $(".taskState").click(function(e) {
             e.preventDefault();
             console.log(e);
             console.log(e.currentTarget.id);
             if (confirm(`Are you sure you want to update this task?`)) {
                   $.ajax({
                     type: "POST",
                     url: "/deadlines/update",
                     data: {
                       deadlineId: e.currentTarget.id,
                       newState: e.currentTarget.innerText
                     },
                     success: function(result) {
                       console.log(result);
                       window.location.reload();
                     },
                     error: function(result) {
                       alert(result.responseJSON.errorMessage);
                     }
                   });
             }
        });
  });

</script>
